{"ast":null,"code":"var _jsxFileName = \"/Users/ibrahimfarajzade/Documents/GitHub/SeniorProject/WebPortal/src/components/DeskTable.js\";\nimport React, { Component } from \"react\";\nimport { Table, Skeleton } from \"antd\";\nimport { parseAllUserData } from \"../javascript/api\";\nimport { Popconfirm } from \"antd\";\nimport Switch from \"react-switch\";\nimport { FormControl } from '@material-ui/core';\nimport { FormControlLabel } from '@material-ui/core';\nimport { FormGroup } from '@material-ui/core';\nimport { FormLabel } from '@material-ui/core';\n\nclass DeskTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateUsers = () => {\n      if (this.props.userData != null && this.props.userData[0] != null) {\n        this.setState({\n          tableData: this.updateUserArray(this.props.userData)\n        });\n      }\n    };\n\n    this.componentDidUpdate = lastProp => {\n      // console.log(lastProp, this.props, this.state);\n      if (lastProp !== this.props) this.updateUsers();\n    };\n\n    this.componentDidMount = prop => {\n      this.updateUsers();\n    };\n\n    this.updateUserArray = users => {\n      return parseAllUserData(users);\n    };\n\n    this.state = {\n      tableData: null\n    };\n  }\n\n  render() {\n    const {\n      loading\n    } = this.props;\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        style: {\n          padding: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n\n    const columns = [{\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      ellipsis: true,\n      width: 180,\n      sorter: (a, b) => a.name.localeCompare(b.name),\n      fixed: \"left\"\n    }, {\n      title: \"ID\",\n      dataIndex: \"id\",\n      key: \"id\",\n      ellipsis: true,\n      width: 330,\n      sorter: (a, b) => a.id.localeCompare(b.id)\n    }, {\n      title: \"Activate\",\n      dataIndex: \"raw\",\n      key: \"raw\",\n      width: 120,\n      render: obj => React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Popconfirm, {\n        placement: \"bottomRight\",\n        title: \"Would you like to activate the desk?\",\n        onConfirm: this.confirmLogout,\n        okText: \"Activate\",\n        cancelText: \"Cancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Activate\")),\n      fixed: \"\"\n    }, {\n      title: \"Enable/Disable\",\n      dataIndex: \"raw\",\n      key: \"raw\",\n      width: 120,\n      render: obj => React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          size: \"small\",\n          checked: checked,\n          onChange: toggleChecked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }),\n        label: \"Small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: checked,\n          onChange: toggleChecked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }),\n        label: \"Normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })),\n      fixed: \"\"\n    }];\n    return React.createElement(Table, {\n      columns: columns,\n      pagination: {\n        showSizeChanger: true\n      },\n      dataSource: this.state.tableData,\n      rowKey: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default DeskTable;","map":{"version":3,"sources":["/Users/ibrahimfarajzade/Documents/GitHub/SeniorProject/WebPortal/src/components/DeskTable.js"],"names":["React","Component","Table","Skeleton","parseAllUserData","Popconfirm","Switch","FormControl","FormControlLabel","FormGroup","FormLabel","DeskTable","constructor","props","updateUsers","userData","setState","tableData","updateUserArray","componentDidUpdate","lastProp","componentDidMount","prop","users","state","render","loading","padding","columns","title","dataIndex","key","ellipsis","width","sorter","a","b","name","localeCompare","fixed","id","obj","confirmLogout","checked","toggleChecked","showSizeChanger"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Skeleton } from \"antd\";\nimport { parseAllUserData } from \"../javascript/api\";\nimport { Popconfirm } from \"antd\";\nimport Switch from \"react-switch\";\nimport { FormControl } from '@material-ui/core';\nimport { FormControlLabel } from '@material-ui/core';\nimport { FormGroup } from '@material-ui/core';\nimport { FormLabel } from '@material-ui/core';\n\nclass DeskTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableData: null\n    };\n  }\n\n  updateUsers = () => {\n    if (this.props.userData != null && this.props.userData[0] != null) {\n      this.setState({\n        tableData: this.updateUserArray(this.props.userData)\n      });\n    }\n  };\n\n  componentDidUpdate = lastProp => {\n    // console.log(lastProp, this.props, this.state);\n    if (lastProp !== this.props) this.updateUsers();\n  };\n\n  componentDidMount = prop => {\n    this.updateUsers();\n  };\n\n  updateUserArray = users => {\n    return parseAllUserData(users);\n  };\n\n  render() {\n    const { loading } = this.props;\n\n    if (loading) {\n      return (\n        <div style={{ padding: \"30px\" }}>\n          <Skeleton active />\n          <Skeleton active />\n          <Skeleton active />\n          <Skeleton active />\n          <Skeleton active />\n        </div>\n      );\n    }\n\n    const columns = [\n      {\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\",\n        ellipsis: true,\n        width: 180,\n        sorter: (a, b) => a.name.localeCompare(b.name),\n        fixed: \"left\"\n      },\n      {\n        title: \"ID\",\n        dataIndex: \"id\",\n        key: \"id\",\n        ellipsis: true,\n        width: 330,\n        sorter: (a, b) => a.id.localeCompare(b.id)\n      },\n      {\n        title: \"Activate\",\n        dataIndex: \"raw\",\n        key: \"raw\",\n        width: 120,\n        render: obj => (\n          <a>\n            <Popconfirm\n                  placement=\"bottomRight\"\n                  title=\"Would you like to activate the desk?\"\n                  onConfirm={this.confirmLogout}\n                  okText=\"Activate\"\n                  cancelText=\"Cancel\"\n            >\n              Activate\n            </Popconfirm>\n          </a>\n          \n        ),\n        fixed: \"\"\n      },\n      {\n        title: \"Enable/Disable\",\n        dataIndex: \"raw\",\n        key: \"raw\",\n        width: 120,\n        render: obj => (\n          <FormGroup>\n            <FormControlLabel\n              control={<Switch size=\"small\" checked={checked} onChange={toggleChecked} />}\n              label=\"Small\"\n            />\n            <FormControlLabel\n              control={<Switch checked={checked} onChange={toggleChecked} />}\n              label=\"Normal\"\n            />\n          </FormGroup>\n          \n        ),\n        fixed: \"\"\n      },\n    ];\n\n    return (\n      <Table\n        columns={columns}\n        pagination={{ showSizeChanger: true }}\n        dataSource={this.state.tableData}\n        rowKey=\"id\"\n      />\n    );\n  }\n}\n\nexport default DeskTable;\n"]},"metadata":{},"sourceType":"module"}