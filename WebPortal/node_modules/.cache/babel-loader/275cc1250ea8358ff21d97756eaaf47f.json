{"ast":null,"code":"var _jsxFileName = \"/Users/ibrahimfarajzade/Documents/GitHub/SeniorProject/WebPortal/src/components/GlobalContext.js\";\nimport React from \"react\";\nexport const GlobalContext = React.createContext({\n  isMobile: false\n});\nexport class GlobalContextProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isMobile: false,\n      viewInCard: false\n    };\n\n    this.setViewInCard = viewInCard => {\n      this.setState({ ...this.state,\n        viewInCard: viewInCard\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    const isMobile = window.innerWidth < 620;\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight,\n      isMobile\n    });\n  }\n\n  render() {\n    const {\n      setViewInCard\n    } = this;\n    return React.createElement(GlobalContext.Provider, {\n      value: { ...this.state,\n        setViewInCard\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\nconst GlobalContextConsumer = GlobalContext.Consumer;\nexport default GlobalContextConsumer;","map":{"version":3,"sources":["/Users/ibrahimfarajzade/Documents/GitHub/SeniorProject/WebPortal/src/components/GlobalContext.js"],"names":["React","GlobalContext","createContext","isMobile","GlobalContextProvider","Component","state","viewInCard","setViewInCard","setState","componentDidMount","updateWindowDimensions","window","addEventListener","bind","componentWillUnmount","removeEventListener","innerWidth","width","height","innerHeight","render","props","children","GlobalContextConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGD,KAAK,CAACE,aAAN,CAAoB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAApB,CAAtB;AAEP,OAAO,MAAMC,qBAAN,SAAoCJ,KAAK,CAACK,SAA1C,CAAoD;AAAA;AAAA;AAAA,SACzDC,KADyD,GACjD;AACNH,MAAAA,QAAQ,EAAE,KADJ;AAENI,MAAAA,UAAU,EAAE;AAFN,KADiD;;AAAA,SAMzDC,aANyD,GAMzCD,UAAU,IAAI;AAC5B,WAAKE,QAAL,CAAc,EAAE,GAAG,KAAKH,KAAV;AAAiBC,QAAAA,UAAU,EAAEA;AAA7B,OAAd;AACD,KARwD;AAAA;;AAUzDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,sBAAL;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKF,sBAAL,CAA4BG,IAA5B,CAAiC,IAAjC,CAAlC;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBH,IAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,sBAA1C;AACD;;AAEDA,EAAAA,sBAAsB,GAAG;AACvB,UAAMR,QAAQ,GAAGS,MAAM,CAACK,UAAP,GAAoB,GAArC;AACA,SAAKR,QAAL,CAAc;AAAES,MAAAA,KAAK,EAAEN,MAAM,CAACK,UAAhB;AAA4BE,MAAAA,MAAM,EAAEP,MAAM,CAACQ,WAA3C;AAAwDjB,MAAAA;AAAxD,KAAd;AACD;;AAEDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA;AAAF,QAAoB,IAA1B;AACA,WACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,MAAA,KAAK,EAAE,EAAE,GAAG,KAAKF,KAAV;AAAiBE,QAAAA;AAAjB,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKc,KAAL,CAAWC,QADd,CADF;AAKD;;AA/BwD;AAkC3D,MAAMC,qBAAqB,GAAGvB,aAAa,CAACwB,QAA5C;AACA,eAAeD,qBAAf","sourcesContent":["import React from \"react\";\n\nexport const GlobalContext = React.createContext({ isMobile: false });\n\nexport class GlobalContextProvider extends React.Component {\n  state = {\n    isMobile: false,\n    viewInCard: false\n  };\n\n  setViewInCard = viewInCard => {\n    this.setState({ ...this.state, viewInCard: viewInCard });\n  };\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    const isMobile = window.innerWidth < 620;\n    this.setState({ width: window.innerWidth, height: window.innerHeight, isMobile });\n  }\n\n  render() {\n    const { setViewInCard } = this;\n    return (\n      <GlobalContext.Provider value={{ ...this.state, setViewInCard }}>\n        {this.props.children}\n      </GlobalContext.Provider>\n    );\n  }\n}\n\nconst GlobalContextConsumer = GlobalContext.Consumer;\nexport default GlobalContextConsumer;\n"]},"metadata":{},"sourceType":"module"}