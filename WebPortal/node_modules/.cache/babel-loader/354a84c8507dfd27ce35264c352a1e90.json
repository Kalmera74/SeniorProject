{"ast":null,"code":"var _jsxFileName = \"/Users/ibrahimfarajzade/Documents/GitHub/SeniorProject/WebPortal/src/components/ObservationDrawer.js\";\nimport React from \"react\";\nimport { requestObservation, getObservationDemo } from \"../javascript/api\";\nimport { Drawer, Descriptions } from \"antd\"; //mport ReactJson from \"react-json-view\";\n\nimport { GlobalContext } from \"../components/GlobalContext\";\n\nconst keyGen = () => {\n  let r = Math.random().toString(36).substring(7);\n  return r;\n}; // to match all kinds of values, see https://www.hl7.org/fhir/observation.html\n\n\nclass ObservationDrawer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClose = () => {\n      this.setState({\n        loading: true,\n        observation: null\n      });\n      console.log(this.state);\n      this.props.onClose();\n    };\n\n    this.onChildrenDrawerClose = () => {\n      this.setState({\n        rawDataDrawer: false\n      });\n    };\n\n    this.openRawDataDrawer = data => {\n      this.setState({\n        rawDataDrawer: true,\n        rawDataDrawerData: data\n      });\n    };\n\n    this.state = {\n      loading: true,\n      observation: null\n    };\n  }\n\n  //load observation\n  async componentDidUpdate() {\n    if (this.props.user && !this.state.observation) {\n      let json;\n\n      try {\n        json = await requestObservation(this.props.user.resource.id);\n      } catch (e) {\n        json = getObservationDemo();\n      }\n\n      this.setState({\n        loading: false,\n        observation: json,\n        rawDataDrawer: false,\n        rawDataDrawerData: null\n      });\n    }\n  }\n\n  render() {\n    var _user$name$, _user$name$2, _user$name$2$given, _user$name$3, _user$name$3$prefix;\n\n    const {\n      visible\n    } = this.props;\n    const user = this.props.user && this.props.user.resource;\n\n    const ViewRawBtn = props => {\n      return React.createElement(\"div\", {\n        style: {\n          margin: \"auto\",\n          textAlign: \"center\",\n          padding: \"10px 0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: () => {\n          this.openRawDataDrawer(props.object);\n        },\n        disabled: this.props.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"View Raw FHIR Data\"));\n    };\n\n    return React.createElement(Drawer, {\n      title: \"User Observation\",\n      placement: \"right\",\n      closable: true,\n      onClose: this.onClose,\n      visible: visible,\n      width: this.context.isMobile ? \"100%\" : \"60%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, user && React.createElement(\"div\", {\n      key: keyGen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Descriptions, {\n      title: \"User Basic Info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Descriptions.Item, {\n      key: keyGen(),\n      label: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, `${(_user$name$ = user.name[0]) === null || _user$name$ === void 0 ? void 0 : _user$name$.family} ${(_user$name$2 = user.name[0]) === null || _user$name$2 === void 0 ? void 0 : (_user$name$2$given = _user$name$2.given) === null || _user$name$2$given === void 0 ? void 0 : _user$name$2$given[0]} (${(_user$name$3 = user.name[0]) === null || _user$name$3 === void 0 ? void 0 : (_user$name$3$prefix = _user$name$3.prefix) === null || _user$name$3$prefix === void 0 ? void 0 : _user$name$3$prefix[0]})`), React.createElement(Descriptions.Item, {\n      key: keyGen(),\n      label: \"ID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, user.id), React.createElement(Descriptions.Item, {\n      key: keyGen(),\n      label: \"Telephone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, user.telecom[0].value), React.createElement(Descriptions.Item, {\n      key: keyGen(),\n      label: \"Birth Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, user.birthDate), React.createElement(Descriptions.Item, {\n      key: keyGen(),\n      label: \"Last Use\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, `${user.address[0].line[0]}, ${user.address[0].city}, ${user.address[0].state}, ${user.address[0].country}`), React.createElement(Descriptions.Item, {\n      key: keyGen(),\n      label: \"Average Time Spent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, `${user.address[0].line[0]}, ${user.address[0].city}, ${user.address[0].state}, ${user.address[0].country}`))));\n  }\n\n}\n\nObservationDrawer.contextType = GlobalContext;\nexport default ObservationDrawer;","map":{"version":3,"sources":["/Users/ibrahimfarajzade/Documents/GitHub/SeniorProject/WebPortal/src/components/ObservationDrawer.js"],"names":["React","requestObservation","getObservationDemo","Drawer","Descriptions","GlobalContext","keyGen","r","Math","random","toString","substring","ObservationDrawer","Component","constructor","props","onClose","setState","loading","observation","console","log","state","onChildrenDrawerClose","rawDataDrawer","openRawDataDrawer","data","rawDataDrawerData","componentDidUpdate","user","json","resource","id","e","render","visible","ViewRawBtn","margin","textAlign","padding","object","context","isMobile","name","family","given","prefix","telecom","value","birthDate","address","line","city","country","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,mBAAvD;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,MAArC,C,CACA;;AAEA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,MAAIC,CAAC,GAAGC,IAAI,CAACC,MAAL,GACLC,QADK,CACI,EADJ,EAELC,SAFK,CAEK,CAFL,CAAR;AAGA,SAAOJ,CAAP;AACD,CALD,C,CAOA;;;AAEA,MAAMK,iBAAN,SAAgCZ,KAAK,CAACa,SAAtC,CAAgD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA6BnBC,OA7BmB,GA6BT,MAAM;AACd,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,IADG;AAEZC,QAAAA,WAAW,EAAE;AAFD,OAAd;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WAAKP,KAAL,CAAWC,OAAX;AACD,KApCkB;;AAAA,SAsCnBO,qBAtCmB,GAsCK,MAAM;AAC5B,WAAKN,QAAL,CAAc;AACZO,QAAAA,aAAa,EAAE;AADH,OAAd;AAGD,KA1CkB;;AAAA,SA4CnBC,iBA5CmB,GA4CCC,IAAI,IAAI;AAC1B,WAAKT,QAAL,CAAc;AACZO,QAAAA,aAAa,EAAE,IADH;AAEZG,QAAAA,iBAAiB,EAAED;AAFP,OAAd;AAID,KAjDkB;;AAGjB,SAAKJ,KAAL,GAAa;AACXJ,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAGD;AACA,QAAMS,kBAAN,GAA2B;AACzB,QAAI,KAAKb,KAAL,CAAWc,IAAX,IAAmB,CAAC,KAAKP,KAAL,CAAWH,WAAnC,EAAgD;AAC9C,UAAIW,IAAJ;;AACA,UAAI;AACFA,QAAAA,IAAI,GAAG,MAAM7B,kBAAkB,CAAC,KAAKc,KAAL,CAAWc,IAAX,CAAgBE,QAAhB,CAAyBC,EAA1B,CAA/B;AACD,OAFD,CAEE,OAAOC,CAAP,EAAU;AACVH,QAAAA,IAAI,GAAG5B,kBAAkB,EAAzB;AACD;;AAED,WAAKe,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,KADG;AAEZC,QAAAA,WAAW,EAAEW,IAFD;AAGZN,QAAAA,aAAa,EAAE,KAHH;AAIZG,QAAAA,iBAAiB,EAAE;AAJP,OAAd;AAMD;AACF;;AAwBDO,EAAAA,MAAM,GAAG;AAAA;;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKpB,KAAzB;AACA,UAAMc,IAAI,GAAG,KAAKd,KAAL,CAAWc,IAAX,IAAmB,KAAKd,KAAL,CAAWc,IAAX,CAAgBE,QAAhD;;AAGA,UAAMK,UAAU,GAAGrB,KAAK,IAAI;AAC1B,aACE;AAAK,QAAA,KAAK,EAAE;AAAEsB,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,SAAS,EAAE,QAA7B;AAAuCC,UAAAA,OAAO,EAAE;AAAhD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKd,iBAAL,CAAuBV,KAAK,CAACyB,MAA7B;AACD,SAHH;AAIE,QAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWG,OAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF;AAYD,KAbD;;AAeA,WACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,kBADR;AAEE,MAAA,SAAS,EAAC,OAFZ;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,OAAO,EAAE,KAAKF,OAJhB;AAKE,MAAA,OAAO,EAAEmB,OALX;AAME,MAAA,KAAK,EAAE,KAAKM,OAAL,CAAaC,QAAb,GAAwB,MAAxB,GAAiC,KAN1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGb,IAAI,IACH;AAAK,MAAA,GAAG,EAAEvB,MAAM,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,GAAG,EAAEA,MAAM,EAA9B;AAAkC,MAAA,KAAK,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,GAAD,eAAGuB,IAAI,CAACc,IAAL,CAAU,CAAV,CAAH,gDAAG,YAAcC,MAAO,IAAxB,gBAA2Bf,IAAI,CAACc,IAAL,CAAU,CAAV,CAA3B,uEAA2B,aAAcE,KAAzC,uDAA2B,mBAAsB,CAAtB,CAAyB,KAApD,gBAAwDhB,IAAI,CAACc,IAAL,CAAU,CAAV,CAAxD,wEAAwD,aAAcG,MAAtE,wDAAwD,oBAAuB,CAAvB,CAA0B,GADrF,CADF,EAIE,oBAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,GAAG,EAAExC,MAAM,EAA9B;AAAkC,MAAA,KAAK,EAAC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGuB,IAAI,CAACG,EADR,CAJF,EAOE,oBAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,GAAG,EAAE1B,MAAM,EAA9B;AAAkC,MAAA,KAAK,EAAC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGuB,IAAI,CAACkB,OAAL,CAAa,CAAb,EAAgBC,KADnB,CAPF,EAUE,oBAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,GAAG,EAAE1C,MAAM,EAA9B;AAAkC,MAAA,KAAK,EAAC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGuB,IAAI,CAACoB,SADR,CAVF,EAaE,oBAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,GAAG,EAAE3C,MAAM,EAA9B;AAAkC,MAAA,KAAK,EAAC,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,GAAEuB,IAAI,CAACqB,OAAL,CAAa,CAAb,EAAgBC,IAAhB,CAAqB,CAArB,CAAwB,KAAItB,IAAI,CAACqB,OAAL,CAAa,CAAb,EAAgBE,IAAK,KAAIvB,IAAI,CAACqB,OAAL,CAAa,CAAb,EAAgB5B,KAAM,KAAIO,IAAI,CAACqB,OAAL,CAAa,CAAb,EAAgBG,OAAQ,EAD7G,CAbF,EAgBE,oBAAC,YAAD,CAAc,IAAd;AAAmB,MAAA,GAAG,EAAE/C,MAAM,EAA9B;AAAkC,MAAA,KAAK,EAAC,oBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,GAAEuB,IAAI,CAACqB,OAAL,CAAa,CAAb,EAAgBC,IAAhB,CAAqB,CAArB,CAAwB,KAAItB,IAAI,CAACqB,OAAL,CAAa,CAAb,EAAgBE,IAAK,KAAIvB,IAAI,CAACqB,OAAL,CAAa,CAAb,EAAgB5B,KAAM,KAAIO,IAAI,CAACqB,OAAL,CAAa,CAAb,EAAgBG,OAAQ,EAD7G,CAhBF,CADF,CATJ,CADF;AAmCD;;AA3G6C;;AAA1CzC,iB,CAUG0C,W,GAAcjD,a;AAoGvB,eAAeO,iBAAf","sourcesContent":["import React from \"react\";\nimport { requestObservation, getObservationDemo } from \"../javascript/api\";\nimport { Drawer, Descriptions } from \"antd\";\n//mport ReactJson from \"react-json-view\";\n\nimport { GlobalContext } from \"../components/GlobalContext\";\n\nconst keyGen = () => {\n  let r = Math.random()\n    .toString(36)\n    .substring(7);\n  return r;\n};\n\n// to match all kinds of values, see https://www.hl7.org/fhir/observation.html\n\nclass ObservationDrawer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      observation: null\n    };\n  }\n\n  static contextType = GlobalContext;\n  //load observation\n  async componentDidUpdate() {\n    if (this.props.user && !this.state.observation) {\n      let json;\n      try {\n        json = await requestObservation(this.props.user.resource.id);\n      } catch (e) {\n        json = getObservationDemo();\n      }\n\n      this.setState({\n        loading: false,\n        observation: json,\n        rawDataDrawer: false,\n        rawDataDrawerData: null\n      });\n    }\n  }\n\n  onClose = () => {\n    this.setState({\n      loading: true,\n      observation: null\n    });\n    console.log(this.state);\n    this.props.onClose();\n  };\n\n  onChildrenDrawerClose = () => {\n    this.setState({\n      rawDataDrawer: false\n    });\n  };\n\n  openRawDataDrawer = data => {\n    this.setState({\n      rawDataDrawer: true,\n      rawDataDrawerData: data\n    });\n  };\n\n  render() {\n    const { visible } = this.props;\n    const user = this.props.user && this.props.user.resource;\n\n    \n    const ViewRawBtn = props => {\n      return (\n        <div style={{ margin: \"auto\", textAlign: \"center\", padding: \"10px 0\" }}>\n          <a\n            onClick={() => {\n              this.openRawDataDrawer(props.object);\n            }}\n            disabled={this.props.loading}\n          >\n            View Raw FHIR Data\n          </a>\n        </div>\n      );\n    };\n\n    return (\n      <Drawer\n        title=\"User Observation\"\n        placement=\"right\"\n        closable={true}\n        onClose={this.onClose}\n        visible={visible}\n        width={this.context.isMobile ? \"100%\" : \"60%\"}\n      >\n        {user && (\n          <div key={keyGen()}>\n            <Descriptions title=\"User Basic Info\">\n              <Descriptions.Item key={keyGen()} label=\"Name\">\n                {`${user.name[0]?.family} ${user.name[0]?.given?.[0]} (${user.name[0]?.prefix?.[0]})`}\n              </Descriptions.Item>\n              <Descriptions.Item key={keyGen()} label=\"ID\">\n                {user.id}\n              </Descriptions.Item>\n              <Descriptions.Item key={keyGen()} label=\"Telephone\">\n                {user.telecom[0].value}\n              </Descriptions.Item>\n              <Descriptions.Item key={keyGen()} label=\"Birth Date\">\n                {user.birthDate}\n              </Descriptions.Item>\n              <Descriptions.Item key={keyGen()} label=\"Last Use\">\n                {`${user.address[0].line[0]}, ${user.address[0].city}, ${user.address[0].state}, ${user.address[0].country}`}\n              </Descriptions.Item>\n              <Descriptions.Item key={keyGen()} label=\"Average Time Spent\">\n                {`${user.address[0].line[0]}, ${user.address[0].city}, ${user.address[0].state}, ${user.address[0].country}`}\n              </Descriptions.Item>\n            </Descriptions>\n          </div>\n        )}\n      </Drawer>\n    );\n  }\n}\n\nexport default ObservationDrawer;\n"]},"metadata":{},"sourceType":"module"}