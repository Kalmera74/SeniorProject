{"ast":null,"code":"let userListDemo = require(\"./patientDemoData.json\");\n\nlet observationDemo = require(\"./observationDemoData.json\");\n\nconst SERVER_URL = \"https://henryz.cc:5001/api/\";\n\nconst moment = require(\"moment\");\n\nconst getUserDemo = () => {\n  return combineUsersBundle(userListDemo);\n};\n\nconst getObservationDemo = () => {\n  return combineUsersBundle(observationDemo);\n};\n\nfunction combineUsersBundle(json) {\n  let result = [];\n\n  for (let bundle of json) {\n    result = result.concat(bundle.entry);\n  }\n\n  console.log(result);\n  return result;\n}\n\nfunction requestObservation(id) {\n  return new Promise((resolve, reject) => {\n    fetch(SERVER_URL + \"Observation/\" + id).then(async res => {\n      let json = await res.json();\n      console.log(json);\n      json = combineUsersBundle(json);\n      resolve(json);\n    }).catch(e => {\n      reject(e);\n      console.log(e);\n    });\n  });\n}\n\nfunction requestUserList() {\n  return new Promise((resolve, reject) => {\n    let localCache = localStorage.getItem(\"users\");\n\n    if (localCache) {\n      setTimeout(() => {\n        resolve(JSON.parse(localCache));\n      }, 1000);\n    } else {\n      fetch(SERVER_URL + \"User/\").then(async res => {\n        let json = await res.json();\n        console.log(json);\n        json = combineUsersBundle(json);\n        localStorage.setItem(\"users\", JSON.stringify(json));\n        resolve(json);\n      }).catch(e => {\n        reject(e);\n        console.log(e);\n      });\n    }\n  });\n}\n\nfunction getUserList(message) {\n  return new Promise(async resolve => {\n    let json = null;\n\n    if (window.$globalUsers) {\n      json = window.$globalUsers;\n    } else {\n      // start load api, show loading\n      // const hideLoading = message.loading(\"Please wait, fetching user data...\", 0);\n      try {\n        json = await requestUserList();\n        message.success({\n          content: \"User data loaded!\",\n          duration: 2\n        });\n      } catch (e) {\n        json = getUserDemo(); // message.warn({\n        //   content: \"Network Error, the server might be down. Local demo data is loaded.\",\n        //   duration: 5\n        // });\n      }\n\n      window.$globalUsers = json;\n      hideLoading();\n    }\n\n    resolve(json);\n  });\n}\n\nfunction parseAllUserData(users) {\n  const tableData = [];\n  users.forEach(elementRaw => {\n    var _element$name, _element$name$, _element$name2, _element$name2$, _element$name2$$given, _element$telecom, _element$telecom$, _element$communicatio, _element$communicatio2, _element$communicatio3, _element$maritalStatu, _element$address, _element$address$, _element$address2, _element$address2$, _element$address3, _element$address3$, _element$address4, _element$address4$;\n\n    if (!elementRaw) {\n      return null;\n    }\n\n    let element = elementRaw.resource;\n    let user = {};\n    user.name = ((_element$name = element.name) === null || _element$name === void 0 ? void 0 : (_element$name$ = _element$name[0]) === null || _element$name$ === void 0 ? void 0 : _element$name$.family) + \" \" + ((_element$name2 = element.name) === null || _element$name2 === void 0 ? void 0 : (_element$name2$ = _element$name2[0]) === null || _element$name2$ === void 0 ? void 0 : (_element$name2$$given = _element$name2$.given) === null || _element$name2$$given === void 0 ? void 0 : _element$name2$$given[0]);\n    user.id = element.id;\n    user.phone = (_element$telecom = element.telecom) === null || _element$telecom === void 0 ? void 0 : (_element$telecom$ = _element$telecom[0]) === null || _element$telecom$ === void 0 ? void 0 : _element$telecom$.value;\n    user.language = (_element$communicatio = element.communication) === null || _element$communicatio === void 0 ? void 0 : (_element$communicatio2 = _element$communicatio[0]) === null || _element$communicatio2 === void 0 ? void 0 : (_element$communicatio3 = _element$communicatio2.language) === null || _element$communicatio3 === void 0 ? void 0 : _element$communicatio3.text;\n    user.maritalStatus = (_element$maritalStatu = element.maritalStatus) === null || _element$maritalStatu === void 0 ? void 0 : _element$maritalStatu.text;\n    user.address = (_element$address = element.address) === null || _element$address === void 0 ? void 0 : (_element$address$ = _element$address[0]) === null || _element$address$ === void 0 ? void 0 : _element$address$.line[0];\n    user.city = (_element$address2 = element.address) === null || _element$address2 === void 0 ? void 0 : (_element$address2$ = _element$address2[0]) === null || _element$address2$ === void 0 ? void 0 : _element$address2$.city;\n    user.state = (_element$address3 = element.address) === null || _element$address3 === void 0 ? void 0 : (_element$address3$ = _element$address3[0]) === null || _element$address3$ === void 0 ? void 0 : _element$address3$.state;\n    user.country = (_element$address4 = element.address) === null || _element$address4 === void 0 ? void 0 : (_element$address4$ = _element$address4[0]) === null || _element$address4$ === void 0 ? void 0 : _element$address4$.country;\n    user.gender = element.gender;\n    user.birthDate = element.birthDate;\n    user.birthMonth = moment(element.birthDate).format(\"MMMM\");\n    user.age = moment().diff(element.birthDate, \"years\");\n    user.raw = elementRaw;\n    tableData.push(user);\n  });\n  return tableData;\n}\n\nexport { requestUserList, requestObservation, getUserDemo, getObservationDemo, parseAllUserData, getUserList };","map":{"version":3,"sources":["/Users/ibrahimfarajzade/Documents/GitHub/SeniorProject/WebPortal/src/javascript/api.js"],"names":["userListDemo","require","observationDemo","SERVER_URL","moment","getUserDemo","combineUsersBundle","getObservationDemo","json","result","bundle","concat","entry","console","log","requestObservation","id","Promise","resolve","reject","fetch","then","res","catch","e","requestUserList","localCache","localStorage","getItem","setTimeout","JSON","parse","setItem","stringify","getUserList","message","window","$globalUsers","success","content","duration","hideLoading","parseAllUserData","users","tableData","forEach","elementRaw","element","resource","user","name","family","given","phone","telecom","value","language","communication","text","maritalStatus","address","line","city","state","country","gender","birthDate","birthMonth","format","age","diff","raw","push"],"mappings":"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","sourcesContent":["let userListDemo = require(\"./patientDemoData.json\");\nlet observationDemo = require(\"./observationDemoData.json\");\n\nconst SERVER_URL = \"https://henryz.cc:5001/api/\";\n\nconst moment = require(\"moment\");\n\nconst getUserDemo = () => {\n  return combineUsersBundle(userListDemo);\n};\n\nconst getObservationDemo = () => {\n  return combineUsersBundle(observationDemo);\n};\n\nfunction combineUsersBundle(json) {\n  let result = [];\n  for (let bundle of json) {\n    result = result.concat(bundle.entry);\n  }\n  console.log(result);\n  return result;\n}\n\nfunction requestObservation(id) {\n  return new Promise((resolve, reject) => {\n    fetch(SERVER_URL + \"Observation/\" + id)\n      .then(async res => {\n        let json = await res.json();\n        console.log(json);\n        json = combineUsersBundle(json);\n        resolve(json);\n      })\n      .catch(e => {\n        reject(e);\n        console.log(e);\n      });\n  });\n}\n\nfunction requestUserList() {\n  return new Promise((resolve, reject) => {\n    let localCache = localStorage.getItem(\"users\");\n    if (localCache) {\n      setTimeout(() => {\n        resolve(JSON.parse(localCache));\n      }, 1000);\n    } else {\n      fetch(SERVER_URL + \"User/\")\n        .then(async res => {\n          let json = await res.json();\n          console.log(json);\n          json = combineUsersBundle(json);\n          localStorage.setItem(\"users\", JSON.stringify(json));\n          resolve(json);\n        })\n        .catch(e => {\n          reject(e);\n          console.log(e);\n        });\n    }\n  });\n}\n\nfunction getUserList(message) {\n  return new Promise(async resolve => {\n    let json = null;\n    if (window.$globalUsers) {\n      json = window.$globalUsers;\n    } else {\n      // start load api, show loading\n      // const hideLoading = message.loading(\"Please wait, fetching user data...\", 0);\n      try {\n        json = await requestUserList();\n        message.success({ content: \"User data loaded!\", duration: 2 });\n      } catch (e) {\n        json = getUserDemo();\n        // message.warn({\n        //   content: \"Network Error, the server might be down. Local demo data is loaded.\",\n        //   duration: 5\n        // });\n      }\n      window.$globalUsers = json;\n      hideLoading();\n    }\n    resolve(json);\n  });\n}\n\nfunction parseAllUserData(users) {\n  const tableData = [];\n  users.forEach(elementRaw => {\n    if (!elementRaw) {\n      return null;\n    }\n    let element = elementRaw.resource;\n    let user = {};\n    user.name = element.name?.[0]?.family + \" \" + element.name?.[0]?.given?.[0];\n    user.id = element.id;\n    user.phone = element.telecom?.[0]?.value;\n    user.language = element.communication?.[0]?.language?.text;\n    user.maritalStatus = element.maritalStatus?.text;\n    user.address = element.address?.[0]?.line[0];\n    user.city = element.address?.[0]?.city;\n    user.state = element.address?.[0]?.state;\n    user.country = element.address?.[0]?.country;\n    user.gender = element.gender;\n    user.birthDate = element.birthDate;\n    user.birthMonth = moment(element.birthDate).format(\"MMMM\");\n    user.age = moment().diff(element.birthDate, \"years\");\n    user.raw = elementRaw;\n    tableData.push(user);\n  });\n\n  return tableData;\n}\n\nexport {\n  requestUserList,\n  requestObservation,\n  getUserDemo,\n  getObservationDemo,\n  parseAllUserData,\n  getUserList\n};\n"]},"metadata":{},"sourceType":"module"}