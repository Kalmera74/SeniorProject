{"ast":null,"code":"var _jsxFileName = \"/Users/ibrahimfarajzade/Downloads/GOSH-FHIRworks2020-React-Dashboard-master/src/components/UserTable.js\";\nimport React, { Component } from \"react\";\nimport { Table, Skeleton } from \"antd\";\nimport { parseAllUserData } from \"../javascript/api\";\nimport { Layout, Avatar, Popconfirm, Radio, Tooltip, Modal, message } from \"antd\";\n\nclass UserTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateUsers = () => {\n      if (this.props.userData != null && this.props.userData[0] != null) {\n        this.setState({\n          tableData: this.updateUserArray(this.props.userData)\n        });\n      }\n    };\n\n    this.componentDidUpdate = lastProp => {\n      // console.log(lastProp, this.props, this.state);\n      if (lastProp !== this.props) this.updateUsers();\n    };\n\n    this.componentDidMount = prop => {\n      this.updateUsers();\n    };\n\n    this.updateUserArray = users => {\n      return parseAllUserData(users);\n    };\n\n    this.state = {\n      tableData: null\n    };\n  }\n\n  render() {\n    const {\n      loading\n    } = this.props;\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        style: {\n          padding: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n\n    const columns = [{\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      ellipsis: true,\n      width: 180,\n      sorter: (a, b) => a.name.localeCompare(b.name),\n      fixed: \"left\"\n    }, {\n      title: \"Observations\",\n      dataIndex: \"raw\",\n      key: \"raw\",\n      width: 120,\n      render: obj => React.createElement(\"a\", {\n        onClick: () => {\n          this.props.viewUser(obj);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"View Detail\"),\n      fixed: \"\"\n    }, {\n      title: \"ID\",\n      dataIndex: \"id\",\n      key: \"id\",\n      ellipsis: true,\n      width: 330,\n      sorter: (a, b) => a.id.localeCompare(b.id)\n    }, {\n      title: \"Gender\",\n      dataIndex: \"gender\",\n      key: \"gender\",\n      ellipsis: true,\n      width: 100,\n      sorter: (a, b) => a.gender.localeCompare(b.gender)\n    }, {\n      title: \"Brith Date\",\n      dataIndex: \"birthDate\",\n      key: \"birthDate\",\n      ellipsis: true,\n      width: 150,\n      sorter: (a, b) => a.birthDate.localeCompare(b.birthDate)\n    }, {\n      title: \"Age\",\n      dataIndex: \"age\",\n      key: \"age\",\n      ellipsis: true,\n      width: 100,\n      sorter: (a, b) => a.age - b.age\n    }, {\n      title: \"Phone\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      ellipsis: true,\n      width: 150,\n      sorter: (a, b) => a.phone.localeCompare(b.phone)\n    }, {\n      title: \"Manage\",\n      dataIndex: \"raw\",\n      key: \"raw\",\n      width: 120,\n      render: obj => React.createElement(\"a\", {\n        onClick: () => {\n          this.props.viewUser(obj);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"View Detail\", React.createElement(Popconfirm, {\n        placement: \"bottomRight\",\n        title: \"Would you like to logout of the system?\",\n        onConfirm: this.confirmLogout,\n        okText: \"Logout\",\n        cancelText: \"Cancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })),\n      fixed: \"\"\n    }];\n    return React.createElement(Table, {\n      columns: columns,\n      pagination: {\n        showSizeChanger: true\n      },\n      dataSource: this.state.tableData,\n      rowKey: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default UserTable;","map":{"version":3,"sources":["/Users/ibrahimfarajzade/Downloads/GOSH-FHIRworks2020-React-Dashboard-master/src/components/UserTable.js"],"names":["React","Component","Table","Skeleton","parseAllUserData","Layout","Avatar","Popconfirm","Radio","Tooltip","Modal","message","UserTable","constructor","props","updateUsers","userData","setState","tableData","updateUserArray","componentDidUpdate","lastProp","componentDidMount","prop","users","state","render","loading","padding","columns","title","dataIndex","key","ellipsis","width","sorter","a","b","name","localeCompare","fixed","obj","viewUser","id","gender","birthDate","age","phone","confirmLogout","showSizeChanger"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Skeleton } from \"antd\";\nimport { parseAllUserData } from \"../javascript/api\";\nimport { Layout, Avatar, Popconfirm, Radio, Tooltip, Modal, message } from \"antd\";\n\nclass UserTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableData: null\n    };\n  }\n\n  updateUsers = () => {\n    if (this.props.userData != null && this.props.userData[0] != null) {\n      this.setState({\n        tableData: this.updateUserArray(this.props.userData)\n      });\n    }\n  };\n\n  componentDidUpdate = lastProp => {\n    // console.log(lastProp, this.props, this.state);\n    if (lastProp !== this.props) this.updateUsers();\n  };\n\n  componentDidMount = prop => {\n    this.updateUsers();\n  };\n\n  updateUserArray = users => {\n    return parseAllUserData(users);\n  };\n\n  render() {\n    const { loading } = this.props;\n\n    if (loading) {\n      return (\n        <div style={{ padding: \"30px\" }}>\n          <Skeleton active />\n          <Skeleton active />\n          <Skeleton active />\n          <Skeleton active />\n          <Skeleton active />\n        </div>\n      );\n    }\n\n    const columns = [\n      {\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\",\n        ellipsis: true,\n        width: 180,\n        sorter: (a, b) => a.name.localeCompare(b.name),\n        fixed: \"left\"\n      },\n      {\n        title: \"Observations\",\n        dataIndex: \"raw\",\n        key: \"raw\",\n        width: 120,\n        render: obj => (\n          <a\n            onClick={() => {\n              this.props.viewUser(obj);\n            }}\n          >\n            View Detail\n          </a>\n        ),\n        fixed: \"\"\n      },\n      {\n        title: \"ID\",\n        dataIndex: \"id\",\n        key: \"id\",\n        ellipsis: true,\n        width: 330,\n        sorter: (a, b) => a.id.localeCompare(b.id)\n      },\n      {\n        title: \"Gender\",\n        dataIndex: \"gender\",\n        key: \"gender\",\n        ellipsis: true,\n        width: 100,\n        sorter: (a, b) => a.gender.localeCompare(b.gender)\n      },\n      {\n        title: \"Brith Date\",\n        dataIndex: \"birthDate\",\n        key: \"birthDate\",\n        ellipsis: true,\n        width: 150,\n        sorter: (a, b) => a.birthDate.localeCompare(b.birthDate)\n      },\n      {\n        title: \"Age\",\n        dataIndex: \"age\",\n        key: \"age\",\n        ellipsis: true,\n        width: 100,\n        sorter: (a, b) => a.age - b.age\n      },\n      {\n        title: \"Phone\",\n        dataIndex: \"phone\",\n        key: \"phone\",\n        ellipsis: true,\n        width: 150,\n        sorter: (a, b) => a.phone.localeCompare(b.phone)\n      },\n      {\n        title: \"Manage\",\n        dataIndex: \"raw\",\n        key: \"raw\",\n        width: 120,\n        render: obj => (\n          <a\n            onClick={() => {\n              this.props.viewUser(obj);\n            }}\n          >\n            View Detail\n            <Popconfirm\n                  placement=\"bottomRight\"\n                  title=\"Would you like to logout of the system?\"\n                  onConfirm={this.confirmLogout}\n                  okText=\"Logout\"\n                  cancelText=\"Cancel\"\n                >\n                  \n                </Popconfirm>\n          </a>\n          \n        ),\n        fixed: \"\"\n      },\n    ];\n\n    return (\n      <Table\n        columns={columns}\n        pagination={{ showSizeChanger: true }}\n        dataSource={this.state.tableData}\n        rowKey=\"id\"\n      />\n    );\n  }\n}\n\nexport default UserTable;\n"]},"metadata":{},"sourceType":"module"}