{"ast":null,"code":"var _jsxFileName = \"/Users/ibrahimfarajzade/Downloads/GOSH-FHIRworks2020-React-Dashboard-master/src/routes/search.js\";\nimport React from \"react\";\nimport PatientPage from \"./users\";\nimport SearchForm from \"../components/SearchForm\";\nimport Header from \"../components/Header\";\nimport { message, Modal } from \"antd\";\nimport \"./search.css\";\n\nclass SearchPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.searchPatient = query => {\n      console.log(\"received search request: \", query); //check if all the field is empty except exact macth search checkbox\n\n      let queryClone = Object.assign({}, query);\n      delete queryClone.exactMatch;\n      const isEmpty = Object.values(queryClone).every(x => x === undefined || x === null || x === \"\");\n\n      if (isEmpty) {\n        Modal.warning({\n          title: \"Search Failed\",\n          content: \"At least one field is required to filter results\"\n        });\n        return;\n      }\n\n      if (query.anythingElse) {\n        message.loading(\"You have entered the query to search for everything, this might take a while and your browser might freeze, please wait for the browser to respond.\");\n        setTimeout(() => {\n          this.setState({\n            searchContent: query\n          });\n        }, 1000);\n      } else {\n        this.setState({\n          searchContent: query\n        });\n      }\n    };\n\n    this.state = {\n      searchContent: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Header, {\n      title: \"Advanced Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(SearchForm, {\n      searchRequest: this.searchPatient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), this.state.searchContent && React.createElement(PatientPage, {\n      filter: this.state.searchContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SearchPage;","map":{"version":3,"sources":["/Users/ibrahimfarajzade/Downloads/GOSH-FHIRworks2020-React-Dashboard-master/src/routes/search.js"],"names":["React","PatientPage","SearchForm","Header","message","Modal","SearchPage","Component","constructor","props","searchPatient","query","console","log","queryClone","Object","assign","exactMatch","isEmpty","values","every","x","undefined","warning","title","content","anythingElse","loading","setTimeout","setState","searchContent","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,SAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,MAA/B;AACA,OAAO,cAAP;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,aAPmB,GAOHC,KAAK,IAAI;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,KAAzC,EADuB,CAEvB;;AACA,UAAIG,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,CAAjB;AACA,aAAOG,UAAU,CAACG,UAAlB;AACA,YAAMC,OAAO,GAAGH,MAAM,CAACI,MAAP,CAAcL,UAAd,EAA0BM,KAA1B,CAAgCC,CAAC,IAAIA,CAAC,KAAKC,SAAN,IAAmBD,CAAC,KAAK,IAAzB,IAAiCA,CAAC,KAAK,EAA5E,CAAhB;;AACA,UAAIH,OAAJ,EAAa;AACXb,QAAAA,KAAK,CAACkB,OAAN,CAAc;AACZC,UAAAA,KAAK,EAAE,eADK;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAd;AAIA;AACD;;AACD,UAAId,KAAK,CAACe,YAAV,EAAwB;AACtBtB,QAAAA,OAAO,CAACuB,OAAR,CACE,qJADF;AAGAC,QAAAA,UAAU,CAAC,MAAM;AACf,eAAKC,QAAL,CAAc;AAAEC,YAAAA,aAAa,EAAEnB;AAAjB,WAAd;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OAPD,MAOO;AACL,aAAKkB,QAAL,CAAc;AACZC,UAAAA,aAAa,EAAEnB;AADH,SAAd;AAGD;AACF,KAhCkB;;AAEjB,SAAKoB,KAAL,GAAa;AACXD,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD;;AA6BDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,UAAD;AAAY,MAAA,aAAa,EAAE,KAAKtB,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGG,KAAKqB,KAAL,CAAWD,aAAX,IAA4B,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWD,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH/B,CADF;AAOD;;AA3CsC;;AA8CzC,eAAexB,UAAf","sourcesContent":["import React from \"react\";\nimport PatientPage from \"./users\";\nimport SearchForm from \"../components/SearchForm\";\nimport Header from \"../components/Header\";\nimport { message, Modal } from \"antd\";\nimport \"./search.css\";\n\nclass SearchPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchContent: null\n    };\n  }\n\n  searchPatient = query => {\n    console.log(\"received search request: \", query);\n    //check if all the field is empty except exact macth search checkbox\n    let queryClone = Object.assign({}, query);\n    delete queryClone.exactMatch;\n    const isEmpty = Object.values(queryClone).every(x => x === undefined || x === null || x === \"\");\n    if (isEmpty) {\n      Modal.warning({\n        title: \"Search Failed\",\n        content: \"At least one field is required to filter results\"\n      });\n      return;\n    }\n    if (query.anythingElse) {\n      message.loading(\n        \"You have entered the query to search for everything, this might take a while and your browser might freeze, please wait for the browser to respond.\"\n      );\n      setTimeout(() => {\n        this.setState({ searchContent: query });\n      }, 1000);\n    } else {\n      this.setState({\n        searchContent: query\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Header title=\"Advanced Search\"></Header>\n        <SearchForm searchRequest={this.searchPatient}></SearchForm>\n        {this.state.searchContent && <PatientPage filter={this.state.searchContent} />}\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n"]},"metadata":{},"sourceType":"module"}