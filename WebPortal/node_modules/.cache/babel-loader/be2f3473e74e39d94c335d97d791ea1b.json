{"ast":null,"code":"var _jsxFileName = \"/Users/ibrahimfarajzade/Downloads/GOSH-FHIRworks2020-React-Dashboard-master/src/components/ObservationDrawer.js\";\nimport React from \"react\";\nimport { requestObservation, getObservationDemo } from \"../javascript/api\";\nimport { Drawer, Descriptions, Skeleton, message } from \"antd\";\nimport ReactJson from \"react-json-view\";\nimport { GlobalContext } from \"../components/GlobalContext\";\n\nconst keyGen = () => {\n  let r = Math.random().toString(36).substring(7);\n  return r;\n}; // to match all kinds of values, see https://www.hl7.org/fhir/observation.html\n\n\nconst findValueKey = observation => {\n  let key,\n      keys = [];\n  let filter = new RegExp(\"value.*|component\", \"g\");\n\n  for (key in observation) if (observation.hasOwnProperty(key) && filter.test(key)) keys.push(key);\n\n  return keys[0];\n};\n\nclass ObservationDrawer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClose = () => {\n      this.setState({\n        loading: true,\n        observation: null\n      });\n      console.log(this.state);\n      this.props.onClose();\n    };\n\n    this.onChildrenDrawerClose = () => {\n      this.setState({\n        rawDataDrawer: false\n      });\n    };\n\n    this.openRawDataDrawer = data => {\n      this.setState({\n        rawDataDrawer: true,\n        rawDataDrawerData: data\n      });\n    };\n\n    this.state = {\n      loading: true,\n      observation: null\n    };\n  }\n\n  //load observation\n  async componentDidUpdate() {\n    if (this.props.user && !this.state.observation) {\n      let json;\n\n      try {\n        json = await requestObservation(this.props.user.resource.id);\n      } catch (e) {\n        json = getObservationDemo();\n        message.warn({\n          content: \"Network Error, the server might be down. Local demo data is loaded.\",\n          duration: 2\n        });\n      }\n\n      this.setState({\n        loading: false,\n        observation: json,\n        rawDataDrawer: false,\n        rawDataDrawerData: null\n      });\n    }\n  }\n\n  render() {\n    var _user$name$, _user$name$2, _user$name$2$given, _user$name$3, _user$name$3$prefix;\n\n    const {\n      visible\n    } = this.props;\n    const user = this.props.user && this.props.user.resource; // console.log(\"CONTEXT UPDATE\", this.context);\n\n    const ViewRawBtn = props => {\n      return React.createElement(\"div\", {\n        style: {\n          margin: \"auto\",\n          textAlign: \"center\",\n          padding: \"10px 0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: () => {\n          this.openRawDataDrawer(props.object);\n        },\n        disabled: this.props.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"View Raw FHIR Data\"));\n    };\n\n    let observations = this.state.observation && this.state.observation.map(entry => {\n      var _obs$category, _obs$category$, _obs$category$$coding;\n\n      let obs = entry.resource;\n      let valueKey = findValueKey(obs);\n      let valueItems;\n\n      if (valueKey) {\n        valueItems = Object.keys(obs[valueKey]).map(key => {\n          if (key === \"coding\" || key === \"system\" || key === \"code\") return;\n          const value = obs[valueKey][key] + \"\";\n          return React.createElement(Descriptions.Item, {\n            key: keyGen(),\n            label: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, value);\n        });\n\n        if (valueKey === \"component\") {\n          //special case - blood pressure\n          valueItems = obs.component.map(blood => {\n            var _blood$code, _blood$valueQuantity, _blood$valueQuantity2;\n\n            return React.createElement(Descriptions.Item, {\n              key: keyGen(),\n              label: (_blood$code = blood.code) === null || _blood$code === void 0 ? void 0 : _blood$code.text,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 121\n              },\n              __self: this\n            }, ((_blood$valueQuantity = blood.valueQuantity) === null || _blood$valueQuantity === void 0 ? void 0 : _blood$valueQuantity.value) + \" \" + ((_blood$valueQuantity2 = blood.valueQuantity) === null || _blood$valueQuantity2 === void 0 ? void 0 : _blood$valueQuantity2.unit));\n          });\n        }\n      }\n\n      return React.createElement(\"div\", {\n        key: keyGen(),\n        style: {\n          wordBreak: \"break-all\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Descriptions, {\n        bordered: true,\n        layout: this.context.isMobile ? \"horizontal\" : \"vertical\",\n        key: keyGen(),\n        title: obs.code.text,\n        column: {\n          xxl: 4,\n          xl: 3,\n          lg: 3,\n          md: 3,\n          sm: 2,\n          xs: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Descriptions.Item, {\n        key: keyGen(),\n        label: \"ID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, obs.id), valueItems, React.createElement(Descriptions.Item, {\n        key: keyGen(),\n        label: \"Category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, (_obs$category = obs.category) === null || _obs$category === void 0 ? void 0 : (_obs$category$ = _obs$category[0]) === null || _obs$category$ === void 0 ? void 0 : (_obs$category$$coding = _obs$category$.coding) === null || _obs$category$$coding === void 0 ? void 0 : _obs$category$$coding[0].display), React.createElement(Descriptions.Item, {\n        key: keyGen(),\n        label: \"issued\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, obs.issued), React.createElement(Descriptions.Item, {\n        key: keyGen(),\n        label: \"effectiveDateTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, obs.effectiveDateTime)), React.createElement(ViewRawBtn, {\n        object: obs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(Drawer, {\n      title: \"User Observation\",\n      placement: \"right\",\n      closable: true,\n      onClose: this.onClose,\n      visible: visible,\n      width: this.context.isMobile ? \"100%\" : \"60%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, user && React.createElement(\"div\", {\n      key: keyGen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Descriptions, {\n      title: \"User Basic Info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Descriptions.Item, {\n      key: keyGen(),\n      label: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, `${(_user$name$ = user.name[0]) === null || _user$name$ === void 0 ? void 0 : _user$name$.family} ${(_user$name$2 = user.name[0]) === null || _user$name$2 === void 0 ? void 0 : (_user$name$2$given = _user$name$2.given) === null || _user$name$2$given === void 0 ? void 0 : _user$name$2$given[0]} (${(_user$name$3 = user.name[0]) === null || _user$name$3 === void 0 ? void 0 : (_user$name$3$prefix = _user$name$3.prefix) === null || _user$name$3$prefix === void 0 ? void 0 : _user$name$3$prefix[0]})`), React.createElement(Descriptions.Item, {\n      key: keyGen(),\n      label: \"ID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, user.id), React.createElement(Descriptions.Item, {\n      key: keyGen(),\n      label: \"Telephone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, user.telecom[0].value), React.createElement(Descriptions.Item, {\n      key: keyGen(),\n      label: \"Birth Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, user.birthDate), React.createElement(Descriptions.Item, {\n      key: keyGen(),\n      label: \"Last Use\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, `${user.address[0].line[0]}, ${user.address[0].city}, ${user.address[0].state}, ${user.address[0].country}`), React.createElement(Descriptions.Item, {\n      key: keyGen(),\n      label: \"Average Time Spent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, `${user.address[0].line[0]}, ${user.address[0].city}, ${user.address[0].state}, ${user.address[0].country}`))), React.createElement(Drawer, {\n      title: \"Raw FHIR Data\",\n      width: this.context.isMobile ? \"100%\" : \"50%\",\n      closable: true,\n      onClose: this.onChildrenDrawerClose,\n      visible: this.state.rawDataDrawer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(ReactJson, {\n      src: this.state.rawDataDrawerData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })));\n  }\n\n}\n\nObservationDrawer.contextType = GlobalContext;\nexport default ObservationDrawer;","map":{"version":3,"sources":["/Users/ibrahimfarajzade/Downloads/GOSH-FHIRworks2020-React-Dashboard-master/src/components/ObservationDrawer.js"],"names":["React","requestObservation","getObservationDemo","Drawer","Descriptions","Skeleton","message","ReactJson","GlobalContext","keyGen","r","Math","random","toString","substring","findValueKey","observation","key","keys","filter","RegExp","hasOwnProperty","test","push","ObservationDrawer","Component","constructor","props","onClose","setState","loading","console","log","state","onChildrenDrawerClose","rawDataDrawer","openRawDataDrawer","data","rawDataDrawerData","componentDidUpdate","user","json","resource","id","e","warn","content","duration","render","visible","ViewRawBtn","margin","textAlign","padding","object","observations","map","entry","obs","valueKey","valueItems","Object","value","component","blood","code","text","valueQuantity","unit","wordBreak","context","isMobile","xxl","xl","lg","md","sm","xs","category","coding","display","issued","effectiveDateTime","name","family","given","prefix","telecom","birthDate","address","line","city","country","contextType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { requestObservation, getObservationDemo } from \"../javascript/api\";\nimport { Drawer, Descriptions, Skeleton, message } from \"antd\";\nimport ReactJson from \"react-json-view\";\n\nimport { GlobalContext } from \"../components/GlobalContext\";\n\nconst keyGen = () => {\n  let r = Math.random()\n    .toString(36)\n    .substring(7);\n  return r;\n};\n\n// to match all kinds of values, see https://www.hl7.org/fhir/observation.html\nconst findValueKey = observation => {\n  let key,\n    keys = [];\n  let filter = new RegExp(\"value.*|component\", \"g\");\n  for (key in observation) if (observation.hasOwnProperty(key) && filter.test(key)) keys.push(key);\n  return keys[0];\n};\n\nclass ObservationDrawer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      observation: null\n    };\n  }\n\n  static contextType = GlobalContext;\n  //load observation\n  async componentDidUpdate() {\n    if (this.props.user && !this.state.observation) {\n      let json;\n      try {\n        json = await requestObservation(this.props.user.resource.id);\n      } catch (e) {\n        json = getObservationDemo();\n        message.warn({\n          content: \"Network Error, the server might be down. Local demo data is loaded.\",\n          duration: 2\n        });\n      }\n\n      this.setState({\n        loading: false,\n        observation: json,\n        rawDataDrawer: false,\n        rawDataDrawerData: null\n      });\n    }\n  }\n\n  onClose = () => {\n    this.setState({\n      loading: true,\n      observation: null\n    });\n    console.log(this.state);\n    this.props.onClose();\n  };\n\n  onChildrenDrawerClose = () => {\n    this.setState({\n      rawDataDrawer: false\n    });\n  };\n\n  openRawDataDrawer = data => {\n    this.setState({\n      rawDataDrawer: true,\n      rawDataDrawerData: data\n    });\n  };\n\n  render() {\n    const { visible } = this.props;\n    const user = this.props.user && this.props.user.resource;\n\n    // console.log(\"CONTEXT UPDATE\", this.context);\n    const ViewRawBtn = props => {\n      return (\n        <div style={{ margin: \"auto\", textAlign: \"center\", padding: \"10px 0\" }}>\n          <a\n            onClick={() => {\n              this.openRawDataDrawer(props.object);\n            }}\n            disabled={this.props.loading}\n          >\n            View Raw FHIR Data\n          </a>\n        </div>\n      );\n    };\n\n    let observations =\n      this.state.observation &&\n      this.state.observation.map(entry => {\n        let obs = entry.resource;\n        let valueKey = findValueKey(obs);\n        let valueItems;\n        if (valueKey) {\n          valueItems = Object.keys(obs[valueKey]).map(key => {\n            if (key === \"coding\" || key === \"system\" || key === \"code\") return;\n            const value = obs[valueKey][key] + \"\";\n            return (\n              <Descriptions.Item key={keyGen()} label={key}>\n                {value}\n              </Descriptions.Item>\n            );\n          });\n\n          if (valueKey === \"component\") {\n            //special case - blood pressure\n            valueItems = obs.component.map(blood => {\n              return (\n                <Descriptions.Item key={keyGen()} label={blood.code?.text}>\n                  {blood.valueQuantity?.value + \" \" + blood.valueQuantity?.unit}\n                </Descriptions.Item>\n              );\n            });\n          }\n        }\n        return (\n          <div key={keyGen()} style={{ wordBreak: \"break-all\" }}>\n            <Descriptions\n              bordered={true}\n              layout={this.context.isMobile ? \"horizontal\" : \"vertical\"}\n              key={keyGen()}\n              title={obs.code.text}\n              column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n              <Descriptions.Item key={keyGen()} label=\"ID\">\n                {obs.id}\n              </Descriptions.Item>\n              {valueItems}\n              <Descriptions.Item key={keyGen()} label=\"Category\">\n                {obs.category?.[0]?.coding?.[0].display}\n              </Descriptions.Item>\n              <Descriptions.Item key={keyGen()} label=\"issued\">\n                {obs.issued}\n              </Descriptions.Item>\n              <Descriptions.Item key={keyGen()} label=\"effectiveDateTime\">\n                {obs.effectiveDateTime}\n              </Descriptions.Item>\n            </Descriptions>\n\n            <ViewRawBtn object={obs}></ViewRawBtn>\n          </div>\n        );\n      });\n\n    return (\n      <Drawer\n        title=\"User Observation\"\n        placement=\"right\"\n        closable={true}\n        onClose={this.onClose}\n        visible={visible}\n        width={this.context.isMobile ? \"100%\" : \"60%\"}\n      >\n        {user && (\n          <div key={keyGen()}>\n            <Descriptions title=\"User Basic Info\">\n              <Descriptions.Item key={keyGen()} label=\"Name\">\n                {`${user.name[0]?.family} ${user.name[0]?.given?.[0]} (${user.name[0]?.prefix?.[0]})`}\n              </Descriptions.Item>\n              <Descriptions.Item key={keyGen()} label=\"ID\">\n                {user.id}\n              </Descriptions.Item>\n              <Descriptions.Item key={keyGen()} label=\"Telephone\">\n                {user.telecom[0].value}\n              </Descriptions.Item>\n              <Descriptions.Item key={keyGen()} label=\"Birth Date\">\n                {user.birthDate}\n              </Descriptions.Item>\n              <Descriptions.Item key={keyGen()} label=\"Last Use\">\n                {`${user.address[0].line[0]}, ${user.address[0].city}, ${user.address[0].state}, ${user.address[0].country}`}\n              </Descriptions.Item>\n              <Descriptions.Item key={keyGen()} label=\"Average Time Spent\">\n                {`${user.address[0].line[0]}, ${user.address[0].city}, ${user.address[0].state}, ${user.address[0].country}`}\n              </Descriptions.Item>\n            </Descriptions>\n            {/* <ViewRawBtn object={user}></ViewRawBtn>\n            {observations ? (\n              observations\n            ) : (\n              <div>\n                <Skeleton active />\n                <Skeleton active />\n                <Skeleton active />\n                <Skeleton active />\n                <Skeleton active />\n              </div>\n            )} */}\n          </div>\n        )}\n\n        <Drawer\n          title=\"Raw FHIR Data\"\n          width={this.context.isMobile ? \"100%\" : \"50%\"}\n          closable={true}\n          onClose={this.onChildrenDrawerClose}\n          visible={this.state.rawDataDrawer}\n        >\n          <ReactJson src={this.state.rawDataDrawerData} />\n        </Drawer>\n      </Drawer>\n    );\n  }\n}\n\nexport default ObservationDrawer;\n"]},"metadata":{},"sourceType":"module"}