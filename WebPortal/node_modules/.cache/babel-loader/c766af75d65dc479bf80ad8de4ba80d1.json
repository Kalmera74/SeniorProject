{"ast":null,"code":"let userListDemo = require(\"./patientDemoData.json\");\n\nlet observationDemo = require(\"./observationDemoData.json\"); //const SERVER_URL = \"http://34.71.187.226:5000/api/v0.1.0\";\n\n\nconst SERVER_URL = \"https://senior.fastntech.com/api/users\";\nconst LOGIN_URL = \"\";\n\nconst moment = require(\"moment\");\n\nexport default function getUsers() {\n  console.log(\"wdawda\");\n  fetch(SERVER_URL).then(res => res.json()).then(result => {\n    console.log(result);\n  }, // Note: it's important to handle errors here\n  // instead of a catch() block so that we don't swallow\n  // exceptions from actual bugs in components.\n  error => {\n    console.log(\"failed\");\n  });\n}\nexport function Login(credentials) {\n  console.log(\"Login test\");\n  fetch(LOGIN_URL, {\n    method: \"POST\",\n    body: JSON.stringify(credentials)\n  }).then(res => res.json()).then(result => {\n    console.log(result);\n  }, // Note: it's important to handle errors here\n  // instead of a catch() block so that we don't swallow\n  // exceptions from actual bugs in components.\n  error => {\n    console.log(\"failed\");\n  });\n}\n\nconst getUserDemo = () => {\n  return combineUsersBundle(userListDemo);\n};\n\nconst getObservationDemo = () => {\n  return combineUsersBundle(observationDemo);\n};\n\nfunction combineUsersBundle(json) {\n  let result = [];\n\n  for (let bundle of json) {\n    result = result.concat(bundle.entry);\n  }\n\n  console.log(result);\n  return result;\n}\n\nfunction requestObservation(id) {\n  return new Promise((resolve, reject) => {\n    fetch(SERVER_URL + \"Observation/\" + id).then(async res => {\n      let json = await res.json();\n      console.log(json);\n      json = combineUsersBundle(json);\n      resolve(json);\n    }).catch(e => {\n      reject(e);\n      console.log(e);\n    });\n  });\n}\n\nfunction requestUserList() {\n  return new Promise((resolve, reject) => {\n    let localCache = localStorage.getItem(\"users\");\n\n    if (localCache) {\n      setTimeout(() => {\n        resolve(JSON.parse(localCache));\n      }, 1000);\n    } else {\n      fetch(SERVER_URL + \"User/\").then(async res => {\n        let json = await res.json();\n        console.log(json);\n        json = combineUsersBundle(json);\n        localStorage.setItem(\"users\", JSON.stringify(json));\n        resolve(json);\n      }).catch(e => {\n        reject(e);\n        console.log(e);\n      });\n    }\n  });\n}\n\nfunction getUserList(message) {\n  return new Promise(async resolve => {\n    let json = null;\n\n    if (window.$globalUsers) {\n      json = window.$globalUsers;\n    } else {\n      // start load api, show loading\n      const hideLoading = message.loading(\"Please wait, fetching user data...\", 0);\n\n      try {\n        json = await requestUserList();\n        message.success({\n          content: \"User data loaded!\",\n          duration: 2\n        });\n      } catch (e) {\n        json = getUserDemo(); // message.warn({\n        //   content: \"Network Error, the server might be down. Local demo data is loaded.\",\n        //   duration: 5\n        // });\n      }\n\n      window.$globalUsers = json;\n      hideLoading();\n    }\n\n    resolve(json);\n  });\n}\n\nfunction parseAllUserData(users) {\n  const tableData = [];\n  users.forEach(elementRaw => {\n    var _element$name, _element$name$, _element$name2, _element$name2$, _element$name2$$given, _element$telecom, _element$telecom$, _element$communicatio, _element$communicatio2, _element$communicatio3, _element$maritalStatu, _element$address, _element$address$, _element$address2, _element$address2$, _element$address3, _element$address3$, _element$address4, _element$address4$;\n\n    if (!elementRaw) {\n      return null;\n    }\n\n    let element = elementRaw.resource;\n    let user = {};\n    user.name = ((_element$name = element.name) === null || _element$name === void 0 ? void 0 : (_element$name$ = _element$name[0]) === null || _element$name$ === void 0 ? void 0 : _element$name$.family) + \" \" + ((_element$name2 = element.name) === null || _element$name2 === void 0 ? void 0 : (_element$name2$ = _element$name2[0]) === null || _element$name2$ === void 0 ? void 0 : (_element$name2$$given = _element$name2$.given) === null || _element$name2$$given === void 0 ? void 0 : _element$name2$$given[0]);\n    user.id = element.id;\n    user.phone = (_element$telecom = element.telecom) === null || _element$telecom === void 0 ? void 0 : (_element$telecom$ = _element$telecom[0]) === null || _element$telecom$ === void 0 ? void 0 : _element$telecom$.value;\n    user.language = (_element$communicatio = element.communication) === null || _element$communicatio === void 0 ? void 0 : (_element$communicatio2 = _element$communicatio[0]) === null || _element$communicatio2 === void 0 ? void 0 : (_element$communicatio3 = _element$communicatio2.language) === null || _element$communicatio3 === void 0 ? void 0 : _element$communicatio3.text;\n    user.maritalStatus = (_element$maritalStatu = element.maritalStatus) === null || _element$maritalStatu === void 0 ? void 0 : _element$maritalStatu.text;\n    user.address = (_element$address = element.address) === null || _element$address === void 0 ? void 0 : (_element$address$ = _element$address[0]) === null || _element$address$ === void 0 ? void 0 : _element$address$.line[0];\n    user.city = (_element$address2 = element.address) === null || _element$address2 === void 0 ? void 0 : (_element$address2$ = _element$address2[0]) === null || _element$address2$ === void 0 ? void 0 : _element$address2$.city;\n    user.state = (_element$address3 = element.address) === null || _element$address3 === void 0 ? void 0 : (_element$address3$ = _element$address3[0]) === null || _element$address3$ === void 0 ? void 0 : _element$address3$.state;\n    user.country = (_element$address4 = element.address) === null || _element$address4 === void 0 ? void 0 : (_element$address4$ = _element$address4[0]) === null || _element$address4$ === void 0 ? void 0 : _element$address4$.country;\n    user.gender = element.gender;\n    user.birthDate = element.birthDate;\n    user.birthMonth = moment(element.birthDate).format(\"MMMM\");\n    user.age = moment().diff(element.birthDate, \"years\");\n    user.raw = elementRaw;\n    tableData.push(user);\n  });\n  return tableData;\n}\n\nexport { requestUserList, requestObservation, getUserDemo, getObservationDemo, parseAllUserData, getUserList, getUsers };","map":{"version":3,"sources":["/Users/ibrahimfarajzade/Documents/GitHub/SeniorProject/WebPortal/src/javascript/api.js"],"names":["userListDemo","require","observationDemo","SERVER_URL","LOGIN_URL","moment","getUsers","console","log","fetch","then","res","json","result","error","Login","credentials","method","body","JSON","stringify","getUserDemo","combineUsersBundle","getObservationDemo","bundle","concat","entry","requestObservation","id","Promise","resolve","reject","catch","e","requestUserList","localCache","localStorage","getItem","setTimeout","parse","setItem","getUserList","message","window","$globalUsers","hideLoading","loading","success","content","duration","parseAllUserData","users","tableData","forEach","elementRaw","element","resource","user","name","family","given","phone","telecom","value","language","communication","text","maritalStatus","address","line","city","state","country","gender","birthDate","birthMonth","format","age","diff","raw","push"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,wBAAD,CAA1B;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,4BAAD,CAA7B,C,CAEA;;;AACA,MAAME,UAAU,GAAG,wCAAnB;AACA,MAAMC,SAAS,GAAG,EAAlB;;AAEA,MAAMC,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAtB;;AAEA,eAAe,SAASK,QAAT,GAAoB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACEC,EAAAA,KAAK,CAACN,UAAD,CAAL,CACGO,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVN,IAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACD,GALL,EAMI;AACA;AACA;AACCC,EAAAA,KAAD,IAAW;AACTP,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GAXL;AAaH;AAED,OAAO,SAASO,KAAT,CAAeC,WAAf,EAA4B;AACjCT,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACEC,EAAAA,KAAK,CAACL,SAAD,EAAY;AAACa,IAAAA,MAAM,EAAC,MAAR;AAAgBC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeJ,WAAf;AAArB,GAAZ,CAAL,CACGN,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVN,IAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACD,GALL,EAMI;AACA;AACA;AACCC,EAAAA,KAAD,IAAW;AACTP,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GAXL;AAaH;;AAGD,MAAMa,WAAW,GAAG,MAAM;AACxB,SAAOC,kBAAkB,CAACtB,YAAD,CAAzB;AACD,CAFD;;AAIA,MAAMuB,kBAAkB,GAAG,MAAM;AAC/B,SAAOD,kBAAkB,CAACpB,eAAD,CAAzB;AACD,CAFD;;AAIA,SAASoB,kBAAT,CAA4BV,IAA5B,EAAkC;AAChC,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIW,MAAT,IAAmBZ,IAAnB,EAAyB;AACvBC,IAAAA,MAAM,GAAGA,MAAM,CAACY,MAAP,CAAcD,MAAM,CAACE,KAArB,CAAT;AACD;;AACDnB,EAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACA,SAAOA,MAAP;AACD;;AAED,SAASc,kBAAT,CAA4BC,EAA5B,EAAgC;AAC9B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCtB,IAAAA,KAAK,CAACN,UAAU,GAAG,cAAb,GAA8ByB,EAA/B,CAAL,CACGlB,IADH,CACQ,MAAMC,GAAN,IAAa;AACjB,UAAIC,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAjB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAA,MAAAA,IAAI,GAAGU,kBAAkB,CAACV,IAAD,CAAzB;AACAkB,MAAAA,OAAO,CAAClB,IAAD,CAAP;AACD,KANH,EAOGoB,KAPH,CAOSC,CAAC,IAAI;AACVF,MAAAA,MAAM,CAACE,CAAD,CAAN;AACA1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,CAAZ;AACD,KAVH;AAWD,GAZM,CAAP;AAaD;;AAED,SAASC,eAAT,GAA2B;AACzB,SAAO,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAII,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAjB;;AACA,QAAIF,UAAJ,EAAgB;AACdG,MAAAA,UAAU,CAAC,MAAM;AACfR,QAAAA,OAAO,CAACX,IAAI,CAACoB,KAAL,CAAWJ,UAAX,CAAD,CAAP;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAJD,MAIO;AACL1B,MAAAA,KAAK,CAACN,UAAU,GAAG,OAAd,CAAL,CACGO,IADH,CACQ,MAAMC,GAAN,IAAa;AACjB,YAAIC,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAjB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAA,QAAAA,IAAI,GAAGU,kBAAkB,CAACV,IAAD,CAAzB;AACAwB,QAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BrB,IAAI,CAACC,SAAL,CAAeR,IAAf,CAA9B;AACAkB,QAAAA,OAAO,CAAClB,IAAD,CAAP;AACD,OAPH,EAQGoB,KARH,CAQSC,CAAC,IAAI;AACVF,QAAAA,MAAM,CAACE,CAAD,CAAN;AACA1B,QAAAA,OAAO,CAACC,GAAR,CAAYyB,CAAZ;AACD,OAXH;AAYD;AACF,GApBM,CAAP;AAqBD;;AAED,SAASQ,WAAT,CAAqBC,OAArB,EAA8B;AAC5B,SAAO,IAAIb,OAAJ,CAAY,MAAMC,OAAN,IAAiB;AAClC,QAAIlB,IAAI,GAAG,IAAX;;AACA,QAAI+B,MAAM,CAACC,YAAX,EAAyB;AACvBhC,MAAAA,IAAI,GAAG+B,MAAM,CAACC,YAAd;AACD,KAFD,MAEO;AACL;AACA,YAAMC,WAAW,GAAGH,OAAO,CAACI,OAAR,CAAgB,oCAAhB,EAAsD,CAAtD,CAApB;;AACA,UAAI;AACFlC,QAAAA,IAAI,GAAG,MAAMsB,eAAe,EAA5B;AACAQ,QAAAA,OAAO,CAACK,OAAR,CAAgB;AAAEC,UAAAA,OAAO,EAAE,mBAAX;AAAgCC,UAAAA,QAAQ,EAAE;AAA1C,SAAhB;AACD,OAHD,CAGE,OAAOhB,CAAP,EAAU;AACVrB,QAAAA,IAAI,GAAGS,WAAW,EAAlB,CADU,CAEV;AACA;AACA;AACA;AACD;;AACDsB,MAAAA,MAAM,CAACC,YAAP,GAAsBhC,IAAtB;AACAiC,MAAAA,WAAW;AACZ;;AACDf,IAAAA,OAAO,CAAClB,IAAD,CAAP;AACD,GArBM,CAAP;AAsBD;;AAED,SAASsC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,QAAMC,SAAS,GAAG,EAAlB;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAcC,UAAU,IAAI;AAAA;;AAC1B,QAAI,CAACA,UAAL,EAAiB;AACf,aAAO,IAAP;AACD;;AACD,QAAIC,OAAO,GAAGD,UAAU,CAACE,QAAzB;AACA,QAAIC,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,CAACC,IAAL,GAAY,kBAAAH,OAAO,CAACG,IAAR,kFAAe,CAAf,mEAAmBC,MAAnB,IAA4B,GAA5B,sBAAkCJ,OAAO,CAACG,IAA1C,sEAAkC,eAAe,CAAf,CAAlC,6EAAkC,gBAAmBE,KAArD,0DAAkC,sBAA2B,CAA3B,CAAlC,CAAZ;AACAH,IAAAA,IAAI,CAAC7B,EAAL,GAAU2B,OAAO,CAAC3B,EAAlB;AACA6B,IAAAA,IAAI,CAACI,KAAL,uBAAaN,OAAO,CAACO,OAArB,0EAAa,iBAAkB,CAAlB,CAAb,sDAAa,kBAAsBC,KAAnC;AACAN,IAAAA,IAAI,CAACO,QAAL,4BAAgBT,OAAO,CAACU,aAAxB,oFAAgB,sBAAwB,CAAxB,CAAhB,qFAAgB,uBAA4BD,QAA5C,2DAAgB,uBAAsCE,IAAtD;AACAT,IAAAA,IAAI,CAACU,aAAL,4BAAqBZ,OAAO,CAACY,aAA7B,0DAAqB,sBAAuBD,IAA5C;AACAT,IAAAA,IAAI,CAACW,OAAL,uBAAeb,OAAO,CAACa,OAAvB,0EAAe,iBAAkB,CAAlB,CAAf,sDAAe,kBAAsBC,IAAtB,CAA2B,CAA3B,CAAf;AACAZ,IAAAA,IAAI,CAACa,IAAL,wBAAYf,OAAO,CAACa,OAApB,4EAAY,kBAAkB,CAAlB,CAAZ,uDAAY,mBAAsBE,IAAlC;AACAb,IAAAA,IAAI,CAACc,KAAL,wBAAahB,OAAO,CAACa,OAArB,4EAAa,kBAAkB,CAAlB,CAAb,uDAAa,mBAAsBG,KAAnC;AACAd,IAAAA,IAAI,CAACe,OAAL,wBAAejB,OAAO,CAACa,OAAvB,4EAAe,kBAAkB,CAAlB,CAAf,uDAAe,mBAAsBI,OAArC;AACAf,IAAAA,IAAI,CAACgB,MAAL,GAAclB,OAAO,CAACkB,MAAtB;AACAhB,IAAAA,IAAI,CAACiB,SAAL,GAAiBnB,OAAO,CAACmB,SAAzB;AACAjB,IAAAA,IAAI,CAACkB,UAAL,GAAkBtE,MAAM,CAACkD,OAAO,CAACmB,SAAT,CAAN,CAA0BE,MAA1B,CAAiC,MAAjC,CAAlB;AACAnB,IAAAA,IAAI,CAACoB,GAAL,GAAWxE,MAAM,GAAGyE,IAAT,CAAcvB,OAAO,CAACmB,SAAtB,EAAiC,OAAjC,CAAX;AACAjB,IAAAA,IAAI,CAACsB,GAAL,GAAWzB,UAAX;AACAF,IAAAA,SAAS,CAAC4B,IAAV,CAAevB,IAAf;AACD,GArBD;AAuBA,SAAOL,SAAP;AACD;;AAED,SACElB,eADF,EAEEP,kBAFF,EAGEN,WAHF,EAIEE,kBAJF,EAKE2B,gBALF,EAMET,WANF,EAOEnC,QAPF","sourcesContent":["let userListDemo = require(\"./patientDemoData.json\");\nlet observationDemo = require(\"./observationDemoData.json\");\n\n//const SERVER_URL = \"http://34.71.187.226:5000/api/v0.1.0\";\nconst SERVER_URL = \"https://senior.fastntech.com/api/users\";\nconst LOGIN_URL = \"\";\n\nconst moment = require(\"moment\");\n\nexport default function getUsers() {\n  console.log(\"wdawda\");\n    fetch(SERVER_URL)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(\"failed\");\n        }\n      )\n}\n\nexport function Login(credentials) {\n  console.log(\"Login test\");\n    fetch(LOGIN_URL, {method:\"POST\", body:JSON.stringify(credentials)})\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(\"failed\");\n        }\n      )\n}\n\n\nconst getUserDemo = () => {\n  return combineUsersBundle(userListDemo);\n};\n\nconst getObservationDemo = () => {\n  return combineUsersBundle(observationDemo);\n};\n\nfunction combineUsersBundle(json) {\n  let result = [];\n  for (let bundle of json) {\n    result = result.concat(bundle.entry);\n  }\n  console.log(result);\n  return result;\n}\n\nfunction requestObservation(id) {\n  return new Promise((resolve, reject) => {\n    fetch(SERVER_URL + \"Observation/\" + id)\n      .then(async res => {\n        let json = await res.json();\n        console.log(json);\n        json = combineUsersBundle(json);\n        resolve(json);\n      })\n      .catch(e => {\n        reject(e);\n        console.log(e);\n      });\n  });\n}\n\nfunction requestUserList() {\n  return new Promise((resolve, reject) => {\n    let localCache = localStorage.getItem(\"users\");\n    if (localCache) {\n      setTimeout(() => {\n        resolve(JSON.parse(localCache));\n      }, 1000);\n    } else {\n      fetch(SERVER_URL + \"User/\")\n        .then(async res => {\n          let json = await res.json();\n          console.log(json);\n          json = combineUsersBundle(json);\n          localStorage.setItem(\"users\", JSON.stringify(json));\n          resolve(json);\n        })\n        .catch(e => {\n          reject(e);\n          console.log(e);\n        });\n    }\n  });\n}\n\nfunction getUserList(message) {\n  return new Promise(async resolve => {\n    let json = null;\n    if (window.$globalUsers) {\n      json = window.$globalUsers;\n    } else {\n      // start load api, show loading\n      const hideLoading = message.loading(\"Please wait, fetching user data...\", 0);\n      try {\n        json = await requestUserList();\n        message.success({ content: \"User data loaded!\", duration: 2 });\n      } catch (e) {\n        json = getUserDemo();\n        // message.warn({\n        //   content: \"Network Error, the server might be down. Local demo data is loaded.\",\n        //   duration: 5\n        // });\n      }\n      window.$globalUsers = json;\n      hideLoading();\n    }\n    resolve(json);\n  });\n}\n\nfunction parseAllUserData(users) {\n  const tableData = [];\n  users.forEach(elementRaw => {\n    if (!elementRaw) {\n      return null;\n    }\n    let element = elementRaw.resource;\n    let user = {};\n    user.name = element.name?.[0]?.family + \" \" + element.name?.[0]?.given?.[0];\n    user.id = element.id;\n    user.phone = element.telecom?.[0]?.value;\n    user.language = element.communication?.[0]?.language?.text;\n    user.maritalStatus = element.maritalStatus?.text;\n    user.address = element.address?.[0]?.line[0];\n    user.city = element.address?.[0]?.city;\n    user.state = element.address?.[0]?.state;\n    user.country = element.address?.[0]?.country;\n    user.gender = element.gender;\n    user.birthDate = element.birthDate;\n    user.birthMonth = moment(element.birthDate).format(\"MMMM\");\n    user.age = moment().diff(element.birthDate, \"years\");\n    user.raw = elementRaw;\n    tableData.push(user);\n  });\n\n  return tableData;\n}\n\nexport {\n  requestUserList,\n  requestObservation,\n  getUserDemo,\n  getObservationDemo,\n  parseAllUserData,\n  getUserList,\n  getUsers\n};\n"]},"metadata":{},"sourceType":"module"}